[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "eidolon"
version = "0.2.0"
description = "Hyper-personalized AI assistant that functions as a digital twin"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Eidolon Team", email = "team@eidolon.ai"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "assistant", "digital-twin", "automation", "productivity"]
requires-python = ">=3.9"

dependencies = [
    # Core screenshot and system monitoring
    "mss>=9.0.1",
    "Pillow>=10.0.0",
    "psutil>=5.9.0",
    
    # OCR and text extraction
    "pytesseract>=0.3.10",
    "easyocr>=1.7.0",
    
    # Local AI models
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "sentence-transformers>=2.2.0",
    
    # Vector database and embeddings
    "chromadb>=0.4.0",
    "faiss-cpu>=1.7.0",
    "numpy>=1.24.0",
    
    # Cloud AI APIs
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "google-generativeai>=0.5.0",
    
    # Database and storage
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    
    # Configuration and utilities
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    
    # Web interface
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "streamlit>=1.25.0",
    
    # System integration
    "pynput>=1.7.6",
    "watchdog>=3.0.0",
    "apscheduler>=3.10.0",
    
    # MCP Integration
    "enrichmcp>=0.4.5",
    "pyautogui>=0.9.54",
    "pygetwindow>=0.0.9",
    "keyboard>=0.13.5",
    "structlog>=23.2.0",
    "rich>=13.7.0",
    "requests>=2.31.0",
    
    # Cross-platform compatibility
    "pyobjc-framework-Cocoa>=9.0; sys_platform == 'darwin'",
    "pywin32>=306; sys_platform == 'win32'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-httpx>=0.26.0",
    "black>=23.11.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "ruff>=0.1.7",
    "pre-commit>=3.3.0",
    "coverage>=7.3.0",
]

enterprise = [
    "redis>=4.6.0",
    "celery>=5.3.0",
    "prometheus-client>=0.17.0",
    "sentry-sdk>=1.30.0",
]

gpu = [
    "torch>=2.0.0+cu118",
    "torchvision>=0.15.0+cu118",
    "faiss-gpu>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/eidolon-ai/eidolon"
Documentation = "https://docs.eidolon.ai"
Repository = "https://github.com/eidolon-ai/eidolon"
Issues = "https://github.com/eidolon-ai/eidolon/issues"

[project.scripts]
eidolon = "eidolon.cli.main:cli"
eidolon-mcp = "eidolon.mcp.server:main"
eidolon-chat = "eidolon.chat.cli:main"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
eidolon = ["*.yaml", "*.yml", "*.json", "*.txt"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=eidolon",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "-v",
]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mss.*",
    "easyocr.*",
    "chromadb.*",
    "faiss.*",
    "transformers.*",
    "torch.*",
    "torchvision.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["eidolon"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]